#ifndef _DATA_COLLECTION_LOCATION_DATA_H_
#define _DATA_COLLECTION_LOCATION_DATA_H_

/**********************************************************************************************************************************
 * LocationData - Public C interface to the LocationData object
 **********************************************************************************************************************************
 * License: 5G-MAG Public License (v1.0)
 * Authors: David Waring <david.waring2@bbc.co.uk>
 * Copyright: (C) 2024 British Broadcasting Corporation
 *
 * For full license terms please see the LICENSE file distributed with this
 * program. If this file is missing then the license can be retrieved from
 * https://drive.google.com/file/d/1cinCiA778IErENZ3JN52VFW-1ffHpx7Z/view
 **********************************************************************************************************************************/

#ifndef INCLUDED_FROM_DATA_COLLECTION_H
#error "This file can only be included from data-collection.h"
#endif

#include "Ncgi.h"
#include "RangeDirection.h"
#include "CivicAddress.h"
#include "GeographicArea.h"
#include "VelocityEstimate.h"
#include "UeAreaIndication.h"
#include "LosNlosMeasureInd.h"
#include "HighAccuracyGnssMetrics.h"
#include "PeriodicEventInfo.h"
#include "r_3DRelativeLocation.h"
#include "GnssPositioningMethodAndUsage.h"
#include "AccuracyFulfilmentIndicator.h"
#include "Ecgi.h"
#include "r_2DRelativeLocation.h"
#include "IndoorOutdoorInd.h"
#include "PositioningMethodAndUsage.h"
#include "LocalArea.h"
#include "MinorLocationQoS.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct data_collection_model_location_data_s data_collection_model_location_data_t;

    
DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_create();

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_create_copy(const data_collection_model_location_data_t *other);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_create_move(data_collection_model_location_data_t *other);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_copy(data_collection_model_location_data_t *location_data, const data_collection_model_location_data_t *other);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_move(data_collection_model_location_data_t *location_data, data_collection_model_location_data_t *other);

DATA_COLLECTION_SVC_PRODUCER_API void data_collection_model_location_data_free(data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API cJSON *data_collection_model_location_data_toJSON(const data_collection_model_location_data_t *location_data, bool as_request);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_fromJSON(cJSON *json, bool as_request, char **error_reason, char **error_class, char **error_parameter);


DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_geographic_area_t* data_collection_model_location_data_get_location_estimate(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_location_estimate(data_collection_model_location_data_t *location_data, const data_collection_model_geographic_area_t* p_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_location_estimate_move(data_collection_model_location_data_t *location_data, data_collection_model_geographic_area_t* p_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_accuracy_fulfilment_indicator_t* data_collection_model_location_data_get_accuracy_fulfilment_indicator(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_accuracy_fulfilment_indicator(data_collection_model_location_data_t *location_data, const data_collection_model_accuracy_fulfilment_indicator_t* p_accuracy_fulfilment_indicator);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_accuracy_fulfilment_indicator_move(data_collection_model_location_data_t *location_data, data_collection_model_accuracy_fulfilment_indicator_t* p_accuracy_fulfilment_indicator);

DATA_COLLECTION_SVC_PRODUCER_API const int32_t data_collection_model_location_data_get_age_of_location_estimate(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_age_of_location_estimate(data_collection_model_location_data_t *location_data, const int32_t p_age_of_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_age_of_location_estimate_move(data_collection_model_location_data_t *location_data, int32_t p_age_of_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API const char* data_collection_model_location_data_get_timestamp_of_location_estimate(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_timestamp_of_location_estimate(data_collection_model_location_data_t *location_data, const char* p_timestamp_of_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_timestamp_of_location_estimate_move(data_collection_model_location_data_t *location_data, char* p_timestamp_of_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_velocity_estimate_t* data_collection_model_location_data_get_velocity_estimate(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_velocity_estimate(data_collection_model_location_data_t *location_data, const data_collection_model_velocity_estimate_t* p_velocity_estimate);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_velocity_estimate_move(data_collection_model_location_data_t *location_data, data_collection_model_velocity_estimate_t* p_velocity_estimate);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_civic_address_t* data_collection_model_location_data_get_civic_address(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_civic_address(data_collection_model_location_data_t *location_data, const data_collection_model_civic_address_t* p_civic_address);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_civic_address_move(data_collection_model_location_data_t *location_data, data_collection_model_civic_address_t* p_civic_address);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_local_area_t* data_collection_model_location_data_get_local_location_estimate(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_local_location_estimate(data_collection_model_location_data_t *location_data, const data_collection_model_local_area_t* p_local_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_local_location_estimate_move(data_collection_model_location_data_t *location_data, data_collection_model_local_area_t* p_local_location_estimate);

DATA_COLLECTION_SVC_PRODUCER_API ogs_list_t* data_collection_model_location_data_get_positioning_data_list(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_positioning_data_list(data_collection_model_location_data_t *location_data, const ogs_list_t* p_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_positioning_data_list_move(data_collection_model_location_data_t *location_data, ogs_list_t* p_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_add_positioning_data_list(data_collection_model_location_data_t *location_data, data_collection_model_positioning_method_and_usage_t* positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_remove_positioning_data_list(data_collection_model_location_data_t *location_data, const data_collection_model_positioning_method_and_usage_t* positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_clear_positioning_data_list(data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API ogs_list_t* data_collection_model_location_data_get_gnss_positioning_data_list(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_gnss_positioning_data_list(data_collection_model_location_data_t *location_data, const ogs_list_t* p_gnss_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_gnss_positioning_data_list_move(data_collection_model_location_data_t *location_data, ogs_list_t* p_gnss_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_add_gnss_positioning_data_list(data_collection_model_location_data_t *location_data, data_collection_model_gnss_positioning_method_and_usage_t* gnss_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_remove_gnss_positioning_data_list(data_collection_model_location_data_t *location_data, const data_collection_model_gnss_positioning_method_and_usage_t* gnss_positioning_data_list);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_clear_gnss_positioning_data_list(data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_ecgi_t* data_collection_model_location_data_get_ecgi(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ecgi(data_collection_model_location_data_t *location_data, const data_collection_model_ecgi_t* p_ecgi);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ecgi_move(data_collection_model_location_data_t *location_data, data_collection_model_ecgi_t* p_ecgi);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_ncgi_t* data_collection_model_location_data_get_ncgi(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ncgi(data_collection_model_location_data_t *location_data, const data_collection_model_ncgi_t* p_ncgi);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ncgi_move(data_collection_model_location_data_t *location_data, data_collection_model_ncgi_t* p_ncgi);

DATA_COLLECTION_SVC_PRODUCER_API const double data_collection_model_location_data_get_altitude(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_altitude(data_collection_model_location_data_t *location_data, const double p_altitude);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_altitude_move(data_collection_model_location_data_t *location_data, double p_altitude);

DATA_COLLECTION_SVC_PRODUCER_API const int32_t data_collection_model_location_data_get_barometric_pressure(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_barometric_pressure(data_collection_model_location_data_t *location_data, const int32_t p_barometric_pressure);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_barometric_pressure_move(data_collection_model_location_data_t *location_data, int32_t p_barometric_pressure);

DATA_COLLECTION_SVC_PRODUCER_API const char* data_collection_model_location_data_get_serving_lmf_identification(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_serving_lmf_identification(data_collection_model_location_data_t *location_data, const char* p_serving_lmf_identification);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_serving_lmf_identification_move(data_collection_model_location_data_t *location_data, char* p_serving_lmf_identification);

DATA_COLLECTION_SVC_PRODUCER_API const unsigned char* data_collection_model_location_data_get_ue_positioning_cap(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ue_positioning_cap(data_collection_model_location_data_t *location_data, const unsigned char* p_ue_positioning_cap);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ue_positioning_cap_move(data_collection_model_location_data_t *location_data, unsigned char* p_ue_positioning_cap);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_ue_area_indication_t* data_collection_model_location_data_get_ue_area_ind(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ue_area_ind(data_collection_model_location_data_t *location_data, const data_collection_model_ue_area_indication_t* p_ue_area_ind);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ue_area_ind_move(data_collection_model_location_data_t *location_data, data_collection_model_ue_area_indication_t* p_ue_area_ind);

DATA_COLLECTION_SVC_PRODUCER_API const char* data_collection_model_location_data_get_supported_features(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_supported_features(data_collection_model_location_data_t *location_data, const char* p_supported_features);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_supported_features_move(data_collection_model_location_data_t *location_data, char* p_supported_features);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_minor_location_qo_s_t* data_collection_model_location_data_get_achieved_qos(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_achieved_qos(data_collection_model_location_data_t *location_data, const data_collection_model_minor_location_qo_s_t* p_achieved_qos);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_achieved_qos_move(data_collection_model_location_data_t *location_data, data_collection_model_minor_location_qo_s_t* p_achieved_qos);

DATA_COLLECTION_SVC_PRODUCER_API const bool data_collection_model_location_data_is_direct_report_ind(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_direct_report_ind(data_collection_model_location_data_t *location_data, const bool p_direct_report_ind);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_direct_report_ind_move(data_collection_model_location_data_t *location_data, bool p_direct_report_ind);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_indoor_outdoor_ind_t* data_collection_model_location_data_get_indoor_outdoor_ind(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_indoor_outdoor_ind(data_collection_model_location_data_t *location_data, const data_collection_model_indoor_outdoor_ind_t* p_indoor_outdoor_ind);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_indoor_outdoor_ind_move(data_collection_model_location_data_t *location_data, data_collection_model_indoor_outdoor_ind_t* p_indoor_outdoor_ind);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_periodic_event_info_t* data_collection_model_location_data_get_accepted_periodic_event_info(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_accepted_periodic_event_info(data_collection_model_location_data_t *location_data, const data_collection_model_periodic_event_info_t* p_accepted_periodic_event_info);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_accepted_periodic_event_info_move(data_collection_model_location_data_t *location_data, data_collection_model_periodic_event_info_t* p_accepted_periodic_event_info);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_high_accuracy_gnss_metrics_t* data_collection_model_location_data_get_ha_gnss_metrics(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ha_gnss_metrics(data_collection_model_location_data_t *location_data, const data_collection_model_high_accuracy_gnss_metrics_t* p_ha_gnss_metrics);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_ha_gnss_metrics_move(data_collection_model_location_data_t *location_data, data_collection_model_high_accuracy_gnss_metrics_t* p_ha_gnss_metrics);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_los_nlos_measure_ind_t* data_collection_model_location_data_get_los_nlos_measure_ind(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_los_nlos_measure_ind(data_collection_model_location_data_t *location_data, const data_collection_model_los_nlos_measure_ind_t* p_los_nlos_measure_ind);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_los_nlos_measure_ind_move(data_collection_model_location_data_t *location_data, data_collection_model_los_nlos_measure_ind_t* p_los_nlos_measure_ind);

DATA_COLLECTION_SVC_PRODUCER_API const char* data_collection_model_location_data_get_related_applicationlayer_id(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_related_applicationlayer_id(data_collection_model_location_data_t *location_data, const char* p_related_applicationlayer_id);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_related_applicationlayer_id_move(data_collection_model_location_data_t *location_data, char* p_related_applicationlayer_id);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_range_direction_t* data_collection_model_location_data_get_range_direction(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_range_direction(data_collection_model_location_data_t *location_data, const data_collection_model_range_direction_t* p_range_direction);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_range_direction_move(data_collection_model_location_data_t *location_data, data_collection_model_range_direction_t* p_range_direction);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_r_2_d_relative_location_t* data_collection_model_location_data_get_r2d_relative_location(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_r2d_relative_location(data_collection_model_location_data_t *location_data, const data_collection_model_r_2_d_relative_location_t* p_r_2d_relative_location);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_r2d_relative_location_move(data_collection_model_location_data_t *location_data, data_collection_model_r_2_d_relative_location_t* p_r_2d_relative_location);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_r_3_d_relative_location_t* data_collection_model_location_data_get_r3d_relative_location(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_r3d_relative_location(data_collection_model_location_data_t *location_data, const data_collection_model_r_3_d_relative_location_t* p_r_3d_relative_location);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_r3d_relative_location_move(data_collection_model_location_data_t *location_data, data_collection_model_r_3_d_relative_location_t* p_r_3d_relative_location);

DATA_COLLECTION_SVC_PRODUCER_API const data_collection_model_velocity_estimate_t* data_collection_model_location_data_get_relative_velocity(const data_collection_model_location_data_t *location_data);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_relative_velocity(data_collection_model_location_data_t *location_data, const data_collection_model_velocity_estimate_t* p_relative_velocity);

DATA_COLLECTION_SVC_PRODUCER_API data_collection_model_location_data_t *data_collection_model_location_data_set_relative_velocity_move(data_collection_model_location_data_t *location_data, data_collection_model_velocity_estimate_t* p_relative_velocity);

/* lnode helper for generating ogs_list_t nodes's of type LocationData */
DATA_COLLECTION_SVC_PRODUCER_API data_collection_lnode_t *data_collection_model_location_data_make_lnode(data_collection_model_location_data_t *location_data);

/***** Internal library protected functions *****/

#ifdef __cplusplus
}
#endif

/* vim:ts=8:sts=4:sw=4:expandtab:
 */

#endif /* ifndef _DATA_COLLECTION_LOCATION_DATA_H_ */

